---
- name: Create Work signing keys
  run_once: true
  when:
    - groups['automationcontroller'] | default([]) | length
    - inventory_hostname == groups['automationcontroller'][0]
  block:
    - name: Generate Private RSA key for signing work
      community.crypto.openssl_privatekey:
        path: "{{ work_sign_private_keyfile }}"
        type: RSA
        format: pkcs1
        force: "{{ receptor_work_sign_reconfigure }}"
        size: "{{ receptor_tls_bits }}"
        mode: 0640
        owner: root
        group: awx

    - name: Generate public RSA key for signing work
      community.crypto.openssl_publickey:
        path: "{{ work_sign_public_keyfile }}"
        privatekey_path: "{{ work_sign_private_keyfile }}"
        format: PEM
        force: "{{ receptor_work_sign_reconfigure }}"
        mode: 0640
        owner: root
        group: awx

    - name: Slurp work signing keys
      slurp:
        src: "{{ item }}"
      register: signing_keys
      no_log: "{{ _no_log }}"
      with_items:
        - "{{ work_sign_public_keyfile }}"
        - "{{ work_sign_private_keyfile }}"

- name: Distribute Work Sign keys to automationcontroller nodes
  no_log: "{{ _no_log }}"
  copy:
    content: "{{ item['content'] | b64decode }}"
    dest: "{{ item['source'] }}"
    mode: 0640
    owner: root
    group: awx
  when:
    - groups['automationcontroller'] | default([]) | length
    - hostvars[groups['automationcontroller'][0]]['signing_keys']['results'] | default([]) | length
    - inventory_hostname in groups['automationcontroller']
    - inventory_hostname != groups['automationcontroller'][0]
  with_items:
    - "{{ hostvars[groups['automationcontroller'][0]]['signing_keys']['results'] }}"

- name: Distribute work sign public keys to all execution_nodes
  no_log: "{{ _no_log }}"
  copy:
    content: "{{ item['content'] | b64decode }}"
    dest: "{{ item['source'] }}"
    mode: 0640
    owner: receptor
    group: receptor
  when:
    - groups['automationcontroller'] | default([]) | length
    - hostvars[groups['automationcontroller'][0]]['signing_keys']['results'] | default([]) | length
    - groups['execution_nodes'] | default([]) | length
    - inventory_hostname in groups['execution_nodes']
    - item['source'] == work_sign_public_keyfile
    - node_type == 'execution'
  with_items:
    - "{{ hostvars[groups['automationcontroller'][0]]['signing_keys']['results'][0] }}"
