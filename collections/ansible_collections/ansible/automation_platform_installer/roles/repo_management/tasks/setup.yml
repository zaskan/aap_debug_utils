---
# Configure appropriate repositories for EL installation

- include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml'        # RedHat-8
        - '{{ ansible_os_family }}.yml'                                                 # RedHat
        - 'default.yml'
      paths: '../vars'

- name: Install yum repo keys
  copy:
    src: '{{ item }}'
    dest: '/etc/pki/rpm-gpg/{{ item }}'
  with_items: "{{ yum_repo_keys }}"

- name: Install subscription-manager-rhsm-certificates
  yum:
    name: 'subscription-manager-rhsm-certificates'
    state: present

- name: Determine if rhsm repository exists
  stat:
    path: '{{ redhat_rhsm_repo_path }}'
  changed_when: false
  register: rhsm_repo

- name: Enable Automation Platform rhsm repository
  command: subscription-manager repos --enable '{{ redhat_automation_platform_rhsm_repo }}'
  when:
    - ansible_distribution == 'RedHat'
    - rhsm_repo.stat.exists
    - not bundle_install | bool
    - aw_repo_url is undefined
  ignore_errors: true
  register: aap_rhsm_repo_enable

- name: Explain Automation Platform rhsm repository failure
  fail:
    msg: 'The {{ redhat_automation_platform_rhsm_repo }} channel could not be found on this system. Please ensure this machine is registered and subscribed to Red Hat Ansible Automation Platform subscription.'
  when:
    - aap_rhsm_repo_enable.failed | default(false)

- block:
    - name: Enable module hotfixes flag
      command: dnf config-manager --setopt={{ redhat_automation_platform_rhsm_repo }}.module_hotfixes=1 --save
      become: true

    - name: Set AAP repo for update
      set_fact:
        aap_repo_for_update: "{{ redhat_automation_platform_rhsm_repo }}"
  when:
    - aap_rhsm_repo_enable is succeeded
    - aap_rhsm_repo_enable is not skipped

- name: Ensure rsync is installed
  yum:
    name: rsync
  when: bundle_install | bool

- name: Copy bundle packages to repo source directory
  block:
    - name: Copy bundle packages to repo source directory
      synchronize:
        src: '{{ setup_dir }}/bundle/packages/el{{ ansible_distribution_major_version }}/repos/'
        dest: "{{ bundle_install_folder }}"
        archive: yes
        compress: yes
        delete: yes
  rescue:
    - name: Remove old bundle packages source directory (legacy)
      file:
        path: "{{ bundle_install_folder }}"
        state: absent
    - name: Copy bundle packages to repo source directory (legacy)
      copy:
        src: '{{ setup_dir }}/bundle/packages/el{{ ansible_distribution_major_version }}/repos/'
        dest: "{{ bundle_install_folder }}"
  when: bundle_install | bool

- name: Install the Automation Platform bundle repository
  template:
    src: aap_bundle.j2
    dest: /etc/yum.repos.d/ansible-automation-platform.repo
  when: bundle_install | bool

- name: Remove legacy ansible-tower repository
  file:
    path: /etc/yum.repos.d/ansible-tower.repo
    state: absent

- name: Install the Automation Platform yum repository.
  template:
    src: yum_repo.j2
    dest: /etc/yum.repos.d/ansible-automation-platform.repo
  register: yum_repo
  when:
    - aw_repo_url is defined
    - not bundle_install | bool

- name: Set repo list for bundle install
  set_fact:
    extra_repos: "{{ ansible_automation_platform_repo }}"
    aap_repo_for_update: "{{ ansible_automation_platform_repo }}"
  when: bundle_install | bool

- name: Set repo list for online install
  set_fact:
    extra_repos: "{{ ansible_automation_platform_repo }} {{ automation_controller_repo }}"
    aap_repo_for_update: "{{ ansible_automation_platform_repo }}"
  when:
    - yum_repo is succeeded
    - yum_repo is not skipped

- name: Enable Ansible Automation Platform repo
  command: dnf config-manager --enable {{ extra_repos }}
  become: true
  when: extra_repos is defined
