- ansible.builtin.debug:
    msg: 'Creating Permission {{ permission.name }}'
  name: 'Permission Name'

- name: "reset the permission variables"
  set_fact:
    pws: {}
    extra_values: {}

- name: 'Get scope if specified'
  uri:
    url: '{{ sso_api_client_url }}/authz/resource-server/scope?deep=false&first=0&max=20&name={{ permission.scope_name }}'
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ sso_token }}'
      Content-type: application/json
    method: GET
    validate_certs: no
    status_code:
      - 200
  register: scope_access
  when: 'permission.scope_name is defined'

- name: 'Set Scope ID'
  set_fact:
    scope_id: '{{ scope_access[''json''][0].id }}'
  when: 'permission.scope_name is defined and scope_access is defined'

- name: 'Set Policy Value'
  set_fact:
    extra_values:
      policies:
        - '{{ policy_id }}'
  when: 'permission.scope_name is not defined'

- name: 'Set Policy & Scope Value'
  set_fact:
    extra_values:
      policies:
        - '{{ policy_id }}'
      scopes:
        - '{{ scope_id }}'
  when: 'permission.scope_name is defined and scope_id is defined'

- loop_control:
    loop_var: current_item
  name: 'create a permission without the scope_name'
  set_fact:
    pws: '{{ pws | default({}) | combine({current_item.key: current_item.value}) }}'
  when: 'current_item.key | string != "scope_name"'
  with_dict: '{{ permission }}'

- name: 'Create a permission item with policy or policy & scope values'
  set_fact:
    permission_item: '{{ pws | combine(extra_values) }}'

- name: 'Create permission'
  uri:
    body: '{{ permission_item | to_json }}'
    body_format: json
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ sso_token }}'
      Content-type: application/json
    method: POST
    validate_certs: no
    status_code:
      - 201
      - 409
    url: '{{ sso_api_client_url }}/authz/resource-server/permission/resource'
