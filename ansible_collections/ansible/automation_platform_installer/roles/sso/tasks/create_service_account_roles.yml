- name: 'Get service account user object for the client'
  uri:
    url: '{{ sso_api_client_url }}/service-account-user'
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ sso_token }}'
      Content-type: application/json
    method: GET
    validate_certs: no
    status_code:
      - 200
  register: sa_object

- name: 'Set sa_user_id from the retrived object'
  set_fact:
    sa_user_id: '{{ sa_object[''json''].id }}'

- name: 'Get Realm management client'
  uri:
    url: '{{ sso_api_url_base }}/admin/realms/{{ sso_automation_platform_realm }}/clients?clientId=realm-management&first=0&max=20&search=true'
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ sso_token }}'
      Content-type: application/json
    method: GET
    validate_certs: no
    status_code:
      - 200
  register: realm_management_client

- name: 'Save realm client'
  set_fact:
    realm_client: '{{ realm_management_client[''json''][0] }}'

- name: 'Get composite realm roles'
  uri:
    url: '{{ sso_api_url_base }}/admin/realms/{{ sso_automation_platform_realm }}/users/{{ sa_user_id }}/role-mappings/realm/composite'
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ sso_token }}'
      Content-type: application/json
    method: GET
    validate_certs: no
    status_code:
      - 200
  register: composite_realm_roles

- name: 'Get available realm roles'
  uri:
    url: '{{ sso_api_url_base }}/admin/realms/{{ sso_automation_platform_realm }}/users/{{ sa_user_id }}/role-mappings/realm/available'
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ sso_token }}'
      Content-type: application/json
    method: GET
    validate_certs: no
    status_code:
      - 200
  register: available_realm_roles

- name: 'Get composite client roles'
  uri:
    url: '{{ sso_api_url_base }}/admin/realms/{{ sso_automation_platform_realm }}/users/{{ sa_user_id }}/role-mappings/clients/{{ realm_client[''id''] }}/composite'
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ sso_token }}'
      Content-type: application/json
    method: GET
    validate_certs: no
    status_code:
      - 200
  register: composite_client_roles

- name: 'Get available client roles'
  uri:
    url: '{{ sso_api_url_base }}/admin/realms/{{ sso_automation_platform_realm }}/users/{{ sa_user_id }}/role-mappings/clients/{{ realm_client[''id''] }}/available'
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ sso_token }}'
      Content-type: application/json
    method: GET
    validate_certs: no
    status_code:
      - 200
  register: available_client_roles

- name: 'Combine all roles into a single list'
  set_fact:
    all_roles: '{{ composite_realm_roles[''json''] + available_realm_roles[''json''] + composite_client_roles[''json''] + available_client_roles[''json''] }}'

- name: 'Filter role from all roles'
  set_fact:
    role_body: "{{ all_roles | selectattr('name', 'in', sso_client_realm_management_roles) | list }}"

- name: 'Add realm management roles'
  uri:
    url: '{{ sso_api_url_base }}/admin/realms/{{ sso_automation_platform_realm }}/users/{{ sa_user_id }}/role-mappings/clients/{{ realm_client[''id''] }}'
    body: '{{ role_body | to_json }}'
    body_format: json
    headers:
      Accept: application/json
      Authorization: 'Bearer {{ sso_token }}'
      Content-type: application/json
    method: POST
    validate_certs: no
    status_code:
      - 200
      - 204
  when: role_body | length > 0
